/**
 * last.fm api model
 * @author adrienjoly
 */

var http = require('http');
var util = require('util');
var crypto = require('crypto');

var apiKey = "9c5df33c08281a3dbd68378f4027728e";
var apiSecret = "6bc5cbaeef943d1ac2f84dfba8b51447";
var apiHost = "ws.audioscrobbler.com";
var apiPrefix = "/2.0/?";

function md5(data) {
	return crypto.createHash('md5').update(data).digest("hex");
};
/*
function hex(n, padding) {
	var str = n.toString(16);
	while (str.length < padding)
		str = '0' + str;
	return str;
}

function genAuth(path, obj) {
	var nc = hex(++ncount, 8);
	var a1 = [login, obj.realm, password].join(':');
	var a2 = "GET:"+path;
	var response = [md5(a1), obj.nonce, nc, cnonce, obj.qop, md5(a2)].join(':');
	var auth = [
		'Digest username="'+login+'"',
		'realm="'+obj.realm+'"',
		'nonce="'+obj.nonce+'"',
		'uri="'+path+'"',
		'algorithm='+obj.algorithm, // MD5
		'response="'+md5(response)+'"',
		'opaque="'+obj.opaque+'"',
		'qop=' + obj.qop, // auth
		'nc='+nc,
		'cnonce="'+cnonce+'"'
	].join(', ');
	console.log("-> generated auth", auth);
	return auth;
}

function parseRecvAuth(auth) {
	if (auth) {
		recvAuth = {};
		var defs = auth.substr(auth.indexOf(" ")+1).split(/,\s+/);
		for (var i in defs) {
			var def = defs[i].split('=');
			recvAuth[def[0]] = def[1].replace(/"/g, '');
		}
		console.log("-> received auth", recvAuth);
	}
}
*/

function prepareParams(p) {
	var p = p || {}
	p.api_key = apiKey;
	//p.format = "json";
	return p;
}

function serializeParams(p) {
	var params = [];
	for (var i in p)
		params.push(i + "=" + p[i]);
	return params.join("&");
}

module.exports.submitRequest = function(p, cb) {
	var path = apiPrefix + serializeParams(p);
	util.log("submitting "+path+" request to last.fm ...");

	return req = http.request({
		host: apiHost,
		path: path,
		method: "GET",
	}, function (res) {
		res.setEncoding('utf-8');
		console.log("-> statusCode", res.statusCode);
		//if (res.statusCode == 401) // try again, with correct auth string
		//	!auth && exports.submitRequest(path, /*null*/"pouet", cb);
		//else
		{
			var json = "";
			res.addListener('data', function(chunk) {
				json += chunk.toString();
			});
			res.addListener('end', function() {
				try {
					json = JSON.parse(json);
				} catch(e) {};
				cb(json);
			});
		}
	})
	.end();
};
/*
// http://www.lastfm.fr/api/show/artist.getTopTracks
module.exports.getArtists = function(artistName, cb) {
	exports.submitRequest("artist.gettoptracks&artist="+artistName, function(res) {
		cb(res);
	});
}
*/
// http://www.lastfm.fr/api/webauth
function sign(p) {
	var keys = Object.keys(p);
	keys.sort();
	var chain = "";
	for (var i in keys)
		chain += keys[i] + p[keys[i]];
	chain += apiSecret;
	console.log("sign chain:", chain);
	return md5(chain);
}

// http://www.lastfm.fr/api/show/auth.getSession
module.exports.fetchSessionKey = function(token, cb) {
	var p = prepareParams({
		method: "auth.getSession",
		token: token
	});
	p.api_sig = sign(p);
	exports.submitRequest(p, function(res) {
		cb(res.split(/\<[\/]?key\>/g)[1])
	});
}

// http://www.lastfm.fr/api/show/user.getRecommendedEvents
module.exports.fetchRecommendedGigs = function(sk, cb) {
	var p = prepareParams({
		method: "user.getRecommendedEvents",
		sk: sk
	});
	p.api_sig = sign(p);
	p.format = "json";
	exports.submitRequest(p, function(res) {
		//cb(res.split(/\<[\/]?key\>/g)[1])
		cb(res);
	});
}